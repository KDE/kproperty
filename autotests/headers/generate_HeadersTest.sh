#!/bin/bash
#
# Generates CMakeLists.txt and code for HeadersTest
# Test if all the installed headers can be included individually.
# This is a compile-time test.
#
# Example for KDb:
# % ./generate_HeadersTest.sh ~/kde/build/kdb kdb KDb
#
# Troubleshooting: Make sure there are no old headers in the build-dir: remove the build-dir, and install-dir
#

builddir=$1
prefix=$2
link_libs=$3

me=generate_HeadersTest.sh
srcdir=`pwd`

if [ ! -d "$builddir" -o $# -ne 3 ] ; then
    echo "Usage: $me <project's_builddir> <project_name_prefix> <libraries_to_link>"
    exit 1
fi

cat <<EOT > CMakeLists.txt
# Generated by $me
# prefix: $prefix
# link_libs: $link_libs
#
# WARNING! All changes made in this file will be lost!
#
# Test if all the installed headers can be included individually.
# This is a compile-time test.
#

add_custom_target(headers_test echo "headers_test: Creating HeadersTest files in \${CMAKE_CURRENT_SOURCE_DIR} with builddir=\${CMAKE_BINARY_DIR}, prefix=$prefix, linking to libs [$link_libs]...")

add_custom_command(
    TARGET headers_test
    COMMAND \${CMAKE_CURRENT_SOURCE_DIR}/$me \${CMAKE_BINARY_DIR} $prefix $link_libs
)

add_executable(
    HeadersTest
    HeadersTest.cpp
EOT

cat <<EOT > HeadersTest.cpp
// Generated by $me
// WARNING! All changes made in this file will be lost!

// Nothing to do here
int main(int, char**)
{
    return 0;
}
EOT

# files to include using <name>, forward headers + some *.h headers
files=`find "$builddir/src/$prefix" -type f -printf "%f\n" | grep -v \.h\$`
files="$files ${prefix}_export.h ${prefix}_version.h config-${prefix}.h"
for f in $files; do
    fname=${f}_HeaderTest.cpp
    echo "#include <$f>" > $fname
    echo "    $fname" >> CMakeLists.txt
done

# files to include using <prefix/name>, these are .h files
files=`find "$builddir/src/$prefix" -type f -name "*.h" -printf "%f\n"`
for f in $files; do
    fname=${f}_HeaderTest.cpp
    echo "#include <$prefix/$f>" > $fname
    echo "    $fname" >> CMakeLists.txt
done

cat <<EOT >> CMakeLists.txt
)

target_link_libraries(
  HeadersTest
  $link_libs
)
EOT
