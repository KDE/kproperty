#!/bin/bash
#
# Generates CMakeLists.txt and code for HeadersTest
# Test if all the installed headers can be included individually.
# This is a compile-time test.
#
# Example for KDb:
# % ./generate_HeadersTest.sh ~/kde/build/kdb KDb kdb kdb
#
# Troubleshooting: Make sure there are no old headers in the build-dir: remove the build-dir, and install-dir
#

builddir=$1

me=generate_HeadersTest.sh
srcdir=`pwd`

if [ ! -d "$builddir" -o $# -lt 4 ] ; then
    echo "Usage: $me <project's_builddir> <libraries_to_link> <project_name_prefix> <subdirs_to_find>..."
    exit 1
fi

shift
link_libs=$1
shift
prefix=$1
shift

cat <<EOT > CMakeLists.txt
# Generated by $me
# prefix: $prefix
# link_libs: $link_libs
# subdirs: $@
#
# WARNING! All changes made in this file will be lost!
#
# Test if all the installed headers can be included individually.
# This is a compile-time test.
#

add_custom_target(headers_test echo "headers_test: Creating HeadersTest files in \${CMAKE_CURRENT_SOURCE_DIR} with builddir=\${CMAKE_BINARY_DIR}, prefix=$prefix, linking to libs [$link_libs], searching in subdirs [$@]...")

add_custom_command(
    TARGET headers_test
    COMMAND \${CMAKE_CURRENT_SOURCE_DIR}/$me \${CMAKE_BINARY_DIR} $link_libs $prefix $@
    WORKING_DIRECTORY \${CMAKE_CURRENT_SOURCE_DIR}
)

add_executable(
    HeadersTest
    HeadersTest.cpp
EOT

cat <<EOT > HeadersTest.cpp
// Generated by $me
// WARNING! All changes made in this file will be lost!

// Nothing to do here
int main(int, char**)
{
    return 0;
}
EOT

# files to include using <name>, forward headers + some *.h headers
function find_files
{
    for subdir in "$@" ; do
        find "$builddir/src/$subdir" -maxdepth 1 -type f -printf "%f\n"
    done
}

extra_files="${prefix}_export.h ${prefix}_version.h config-${prefix}.h"

for f in `find_files $@ | grep -v \.h\$ | grep -v "\\." | sort` $extra_files; do
    fname=${f}_HeaderTest.cpp
    echo "#include <$f>" > $fname
    echo "    $fname" >> CMakeLists.txt
done

# files to include using <name>, these are .h files
for f in `find_files $@ | grep \.h\$ | sort`; do
    fname=${f}_HeaderTest.cpp
    echo "#include <$f>" > $fname
    echo "    $fname" >> CMakeLists.txt
done

cat <<EOT >> CMakeLists.txt
)

target_link_libraries(
  HeadersTest
  $link_libs
)
EOT
